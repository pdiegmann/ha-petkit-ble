name: 🚀 Automated Release with AI-Generated Changelog

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v0.1.18, etc.

permissions:
  contents: write
  pull-requests: read

jobs:
  create-release:
    runs-on: ubuntu-latest
    name: 🤖 Create AI-Generated Release
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for comprehensive changelog
      
      - name: 🏷️ Extract Version Info
        id: version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VERSION=${TAG_NAME#v}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "is_prerelease=$(if [[ $VERSION =~ -[a-zA-Z] ]]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT
      
      - name: 📊 Generate Commit Analysis
        id: commits
        run: |
          # Get previous tag for comparison
          PREVIOUS_TAG=$(git tag --sort=-version:refname | grep -v "^${{ steps.version.outputs.tag_name }}$" | head -n 1)
          if [ -z "$PREVIOUS_TAG" ]; then
            PREVIOUS_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT
          
          # Generate commit summary
          COMMIT_RANGE="$PREVIOUS_TAG..${{ steps.version.outputs.tag_name }}"
          echo "commit_range=$COMMIT_RANGE" >> $GITHUB_OUTPUT
          
          # Get detailed commit information
          git log --pretty=format:"- **%s** (%h) by %an%n  %b" $COMMIT_RANGE > commits.txt || echo "- Initial release" > commits.txt
          
          # Count changes
          FILES_CHANGED=$(git diff --name-only $PREVIOUS_TAG..${{ steps.version.outputs.tag_name }} | wc -l || echo "0")
          COMMITS_COUNT=$(git rev-list --count $COMMIT_RANGE || echo "1")
          
          echo "files_changed=$FILES_CHANGED" >> $GITHUB_OUTPUT
          echo "commits_count=$COMMITS_COUNT" >> $GITHUB_OUTPUT

      - name: 🧠 Generate AI-Powered Release Notes
        id: ai_release
        uses: peter-murray/workflow-application-token-action@v3
        with:
          application_id: ${{ secrets.APP_ID }}
          application_private_key: ${{ secrets.APP_PRIVATE_KEY }}
        continue-on-error: true
        
      - name: 🤖 Create Release Notes with OpenAI
        id: openai_release
        if: env.OPENAI_API_KEY != ''
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cat > generate_release_notes.py << 'EOF'
          import os
          import openai
          import json
          
          # Read commit data
          with open('commits.txt', 'r') as f:
              commits = f.read()
          
          # Configure OpenAI
          openai.api_key = os.getenv('OPENAI_API_KEY')
          
          prompt = f"""
          You are a technical documentation expert creating GitHub release notes.
          
          Create professional release notes for PetKit W5 BLE MQTT v${{ steps.version.outputs.version }}.
          
          Project: Home Assistant integration for Petkit water fountains via Bluetooth Low Energy
          Audience: Home Assistant users, IoT enthusiasts, pet owners
          
          Version: ${{ steps.version.outputs.version }}
          Previous: ${{ steps.commits.outputs.previous_tag }}
          Commits: ${{ steps.commits.outputs.commits_count }}
          Files: ${{ steps.commits.outputs.files_changed }}
          
          Recent Changes:
          {commits}
          
          Generate comprehensive release notes with:
          1. 🚀 Release Highlights (key improvements summary)
          2. ✨ New Features (new capabilities)
          3. 🐛 Bug Fixes (issues resolved)
          4. ⚡ Performance & Reliability (optimizations)
          5. 🔧 Technical Changes (developer notes)
          6. 📚 Documentation (updates)
          7. 🔗 Links (changelog, issues)
          
          Use professional tone, clear structure, emojis for visual appeal.
          Focus on BLE connectivity, device reliability, Home Assistant integration benefits.
          """
          
          try:
              response = openai.ChatCompletion.create(
                  model="gpt-3.5-turbo",
                  messages=[
                      {"role": "system", "content": "You are a technical documentation expert specializing in IoT and Home Assistant integrations."},
                      {"role": "user", "content": prompt}
                  ],
                  max_tokens=2000,
                  temperature=0.7
              )
              
              release_notes = response.choices[0].message.content
              
              # Save to file
              with open('ai_release_notes.md', 'w') as f:
                  f.write(release_notes)
              
              # Set output for GitHub Actions
              with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
                  f.write(f"result<<EOF\n{release_notes}\nEOF\n")
                  
              print("✅ AI release notes generated successfully")
              
          except Exception as e:
              print(f"❌ OpenAI API failed: {e}")
              # Fallback to manual template
              fallback_notes = f"""
          ## 🚀 Release ${{ steps.version.outputs.version }}
          
          ### 📋 Changes in this Release
          {commits}
          
          ### 📊 Release Statistics
          - 📦 **Commits**: ${{ steps.commits.outputs.commits_count }}
          - 📁 **Files Changed**: ${{ steps.commits.outputs.files_changed }}
          - 🏷️ **Version**: ${{ steps.version.outputs.version }}
          
          ### 🔗 Links
          - **Full Changelog**: https://github.com/pdiegmann/ha-petkit-ble/compare/${{ steps.commits.outputs.previous_tag }}...${{ steps.version.outputs.tag_name }}
          - **Issues**: https://github.com/pdiegmann/ha-petkit-ble/issues
          """
              
              with open('ai_release_notes.md', 'w') as f:
                  f.write(fallback_notes)
              
              with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
                  f.write(f"result<<EOF\n{fallback_notes}\nEOF\n")
          EOF
          
          python generate_release_notes.py

      - name: 📝 Enhanced Release Notes Generation
        id: enhanced_notes
        if: steps.openai_release.outcome != 'success'
        run: |
          # Create comprehensive release notes using commit analysis
          cat > enhanced_release_notes.py << 'EOF'
          import re
          import os
          
          # Read commits
          with open('commits.txt', 'r') as f:
              commits_content = f.read()
          
          # Categorize commits
          features = []
          fixes = []
          performance = []
          docs = []
          other = []
          
          for line in commits_content.split('\n'):
              if line.strip():
                  line_lower = line.lower()
                  if any(word in line_lower for word in ['feat', 'add', 'new', 'implement']):
                      features.append(line)
                  elif any(word in line_lower for word in ['fix', 'bug', 'issue', 'resolve']):
                      fixes.append(line)
                  elif any(word in line_lower for word in ['perf', 'optim', 'improve', 'enhance', 'speed']):
                      performance.append(line)
                  elif any(word in line_lower for word in ['doc', 'readme', 'guide']):
                      docs.append(line)
                  else:
                      other.append(line)
          
          # Generate structured release notes
          release_notes = f"""
          ## 🚀 Release ${{ steps.version.outputs.version }} - PetKit BLE Integration
          
          Professional Home Assistant integration for Petkit W5 water fountains via Bluetooth Low Energy.
          
          ### 📊 Release Overview
          - **Version**: ${{ steps.version.outputs.version }}
          - **Previous Release**: ${{ steps.commits.outputs.previous_tag }}
          - **Commits**: ${{ steps.commits.outputs.commits_count }} changes
          - **Files Modified**: ${{ steps.commits.outputs.files_changed }} files
          
          """
          
          if features:
              release_notes += "\n### ✨ New Features & Enhancements\n"
              for feature in features:
                  release_notes += f"- {feature}\n"
          
          if fixes:
              release_notes += "\n### 🐛 Bug Fixes & Stability\n"
              for fix in fixes:
                  release_notes += f"- {fix}\n"
          
          if performance:
              release_notes += "\n### ⚡ Performance & Reliability\n"
              for perf in performance:
                  release_notes += f"- {perf}\n"
          
          if docs:
              release_notes += "\n### 📚 Documentation & Maintenance\n"
              for doc in docs:
                  release_notes += f"- {doc}\n"
          
          if other:
              release_notes += "\n### 🔧 Other Changes\n"
              for change in other:
                  release_notes += f"- {change}\n"
          
          release_notes += f"""
          
          ### 🏠 Home Assistant Integration Benefits
          - **Local Control**: No cloud dependencies for device management
          - **Real-time Monitoring**: Live status updates and device health
          - **Automation Ready**: Full integration with HA automations
          - **Reliability Focus**: Robust BLE connection management
          
          ### 📦 Installation & Upgrade
          
          **Via HACS (Recommended):**
          1. Add custom repository: `https://github.com/pdiegmann/ha-petkit-ble`
          2. Install "PetKit BLE Water Fountain" integration
          3. Restart Home Assistant
          4. Configure via Integrations page
          
          **Manual Installation:**
          1. Copy `custom_components/petkit_ble` to your HA custom_components directory
          2. Restart Home Assistant
          3. Add integration via Configuration → Integrations
          
          ### 🔗 Resources
          - **Full Changelog**: https://github.com/pdiegmann/ha-petkit-ble/compare/${{ steps.commits.outputs.previous_tag }}...${{ steps.version.outputs.tag_name }}
          - **Documentation**: https://github.com/pdiegmann/ha-petkit-ble#readme
          - **Issues & Support**: https://github.com/pdiegmann/ha-petkit-ble/issues
          - **HACS**: https://github.com/pdiegmann/ha-petkit-ble
          
          ### 🐾 About PetKit BLE Integration
          Control your Petkit W5 series water fountains directly through Home Assistant using Bluetooth Low Energy. Monitor battery levels, control LED settings, track filter life, and automate your pet's hydration system - all locally without cloud dependencies.
          
          **Supported devices**: Petkit W4/W5/CTW2 series water fountains
          """
          
          # Save release notes
          with open('enhanced_release_notes.md', 'w') as f:
              f.write(release_notes)
          
          # Output for GitHub Actions
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              f.write(f"result<<EOF\n{release_notes}\nEOF\n")
          
          print("✅ Enhanced release notes generated")
          EOF
          
          python enhanced_release_notes.py

      - name: 🚀 Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.version.outputs.tag_name }}
          name: "${{ steps.version.outputs.tag_name }} - PetKit BLE Integration Release"
          body: ${{ steps.openai_release.outputs.result || steps.enhanced_notes.outputs.result }}
          prerelease: ${{ steps.version.outputs.is_prerelease }}
          generateReleaseNotes: false  # We use AI-generated notes instead
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📢 Release Summary
        run: |
          echo "## 🎉 Release Created Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag**: ${{ steps.version.outputs.tag_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commits**: ${{ steps.commits.outputs.commits_count }}" >> $GITHUB_STEP_SUMMARY
          echo "**Files Changed**: ${{ steps.commits.outputs.files_changed }}" >> $GITHUB_STEP_SUMMARY
          echo "**Pre-release**: ${{ steps.version.outputs.is_prerelease }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Release URL**: https://github.com/pdiegmann/ha-petkit-ble/releases/tag/${{ steps.version.outputs.tag_name }}" >> $GITHUB_STEP_SUMMARY